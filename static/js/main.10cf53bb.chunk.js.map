{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","myInterval","this","window","setInterval","tick","clearInterval","setState","props","hasClock","console","info","toUTCString","slice","clockName","className","Component","getRandomName","value","now","toString","App","timerID","componentDidUpdate","_","prevState","debug","document","addEventListener","event","preventDefault","React","ReactDOM","render","getElementById"],"mappings":"sNAaqBA,E,4MACnBC,MAAQ,CACNC,KAAM,IAAIC,KACVC,WAAY,G,uDAGd,WAAqB,IAAD,OAClBC,KAAKJ,MAAMG,WAAaE,OAAOC,aAC7B,kBAAM,EAAKC,SACX,O,kCAIJ,WACEC,cAAcJ,KAAKJ,MAAMG,c,kBAG3B,WACEC,KAAKK,SAAS,CACZR,KAAM,IAAIC,QAGgB,IAAxBE,KAAKM,MAAMC,UACbC,QAAQC,KAAKT,KAAKJ,MAAMC,KAAKa,cAAcC,OAAO,IAAK,M,oBAI3D,WACE,IAAQd,EAASG,KAAKJ,MAAdC,KACR,EAAgCG,KAAKM,MAA7BC,EAAR,EAAQA,SAAUK,EAAlB,EAAkBA,UAElB,OACE,sBAAKC,UAAS,WAAkB,IAAbN,EAAoB,QAAU,aAAjD,UACE,wBAAQM,UAAU,cAAlB,SACGD,IAGF,YAED,sBAAMC,UAAU,cAAhB,SACGhB,EAAKa,cAAcC,OAAO,IAAK,Y,GAxCPG,aCRnC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWP,OAAO,GAE3C,MAAM,SAAN,OAAgBK,GAeX,IAAMG,EAAb,4MACEvB,MAAQ,CACNgB,UAAW,UACXQ,QAAS,EACTb,UAAU,GAJd,EAsBEc,mBAAqB,SAACC,EAAUC,GACZA,EAAUX,YAAc,EAAKhB,MAAMgB,YAEZ,IAAxB,EAAKhB,MAAMW,UAC1BC,QAAQgB,MAAR,uBAA8BD,EAAUX,UAAxC,eAAwD,EAAKhB,MAAMgB,aA1BzE,uDAOE,WAAqB,IAAD,OAClBX,OAAOC,aAAY,WACjB,EAAKG,SAAS,CAAEO,UAAWG,QAC1B,MAEHU,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKvB,SAAS,CAAEE,UAAU,OAG5BkB,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEE,UAAU,SAlBhC,kCA8BE,WACEH,cAAcJ,KAAKJ,MAAMwB,WA/B7B,oBAkCE,WACE,MAGIpB,KAAKJ,MAFPW,EADF,EACEA,SACAK,EAFF,EAEEA,UAGF,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,CACED,UAAWA,EACXL,SAAUA,WA7CpB,GAAyBsB,IAAMf,WCpB/BgB,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.10cf53bb.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n  hasClock: boolean;\n};\n\ntype State = {\n  date: Date;\n  myInterval: number;\n};\n\nexport default class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n    myInterval: 0,\n  };\n\n  componentDidMount() {\n    this.state.myInterval = window.setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.myInterval);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n\n    if (this.props.hasClock === true) {\n      console.info(this.state.date.toUTCString().slice(-12, -4));\n    }\n  }\n\n  render() {\n    const { date } = this.state;\n    const { hasClock, clockName } = this.props;\n\n    return (\n      <div className={`${hasClock === true ? 'Clock' : 'ClockHide'}`}>\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport Clock from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = {\n  clockName: string;\n  hasClock: boolean;\n  timerID: number;\n};\n\ntype State = {\n  clockName: string;\n  timerID: number;\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    timerID: 1,\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentDidUpdate = (_: Props, prevState: State) => {\n    const isRenamed = prevState.clockName !== this.state.clockName;\n\n    if (isRenamed && this.state.hasClock === true) {\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerID);\n  }\n\n  render() {\n    const {\n      hasClock,\n      clockName,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <Clock\n          clockName={clockName}\n          hasClock={hasClock}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}